#include <bits/stdc++.h>
using namespace std;
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    int t = 1;
    cin >> t;
    while (t--)
    {
        int n;
        cin>>n;
        int a[n], p[n];
        for(int i=0; i<n; i++)
            cin>>a[i];
        for(int i=0; i<n; i++)
            cin>>p[i];
        long long dp[3][n];
        for(int i=0; i<n; i++)
        {
            for(int x=0; x<=2; x++)
            {
                if(i==0)
                    dp[x][i] = p[i]*x;
                else
                {
                    dp[x][i] = INT64_MAX;
                    int curlen = a[i] + x;
                    for(int prevx = 0; prevx<=2; prevx++)
                    {
                        int prevlen = a[i-1] + prevx;
                        if(curlen != prevlen)
                            dp[x][i] = min(dp[x][i], p[i]*x + dp[prevx][i-1]);
                    }
    
                }
            }
        }
        long long ans = min({dp[0][n-1], dp[1][n-1], dp[2][n-1]});
        cout << ans << endl;
    }
}
